# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe
# If your package is python based, we recommend using Grayskull to generate it instead:
# https://github.com/conda-incubator/grayskull

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 16 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "connectome-workbench" %}
{% set version = "2.0.0" %}

package:
  name: {{ name }}-split
  version: {{ version }}

source:
  url: https://github.com/Washington-University/workbench/archive/v{{ version }}.tar.gz
  sha256: 2d5a2603a1acb4fabc2b66fab3a8257f05ccd1705cf7f39681be5ff86169dfcf
  patches:
    - patches/0001-Import-cstdint-into-libCZI.h.patch
    - patches/0001-Fix-unsafe-narrowing.patch

build:
  number: 0
  skip: true  # [osx or win]

requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ stdlib('c') }}
    - cmake >=3.0
    - ninja
    - qwt
    # OpenMP
    - llvm-openmp  # [osx]
    - libgomp      # [linux]
    # libGL
    - {{ cdt('mesa-libgl-devel') }}  # [linux]
    - {{ cdt('mesa-dri-drivers') }}  # [linux]
    - {{ cdt('libxdamage') }}        # [linux]
    - {{ cdt('libxxf86vm') }}        # [linux]
    - {{ cdt('libxext') }}           # [linux]
  host:
    - qt
    - openssl
    - libzlib
    - zlib
    - freetype
    - libglu                         # [linux]
    - glew                           # [windows]

test:
  commands:
    - wb_view -help
    - wb_command -version
    - wb_shortcuts -help

outputs:
  - name: {{ name }}-gui
    # build/host requirements should exactly match the root requirements
    requirements:
      build:
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
        - cmake >=3.0
        - ninja
        - qwt
        # OpenMP
        - llvm-openmp  # [osx]
        - libgomp      # [linux]
        # libGL
        - {{ cdt('mesa-libgl-devel') }}  # [linux]
        - {{ cdt('mesa-dri-drivers') }}  # [linux]
        - {{ cdt('libxdamage') }}        # [linux]
        - {{ cdt('libxxf86vm') }}        # [linux]
        - {{ cdt('libxext') }}           # [linux]
      host:
        - qt
        - openssl
        - libzlib
        - zlib
        - freetype
        - libglu                         # [linux]
        - glew                           # [windows]
      run:
        - qt-main
        - libgl                             # [linux]
        - libglu                            # [linux]
    files:
      include:
        - bin/wb_view
    test:
      commands:
        - wb_view -help
  - name: {{ name }}-cli
    # build/host requirements should exactly match the root requirements
    requirements:
      build:
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
        - cmake >=3.0
        - ninja
        - qwt
        # OpenMP
        - llvm-openmp  # [osx]
        - libgomp      # [linux]
        # libGL
        - {{ cdt('mesa-libgl-devel') }}  # [linux]
        - {{ cdt('mesa-dri-drivers') }}  # [linux]
        - {{ cdt('libxdamage') }}        # [linux]
        - {{ cdt('libxxf86vm') }}        # [linux]
        - {{ cdt('libxext') }}           # [linux]
      host:
        - qt
        - openssl
        - libzlib
        - zlib
        - freetype
        - libglu                         # [linux]
        - glew                           # [windows]
      run:
        - qt-main
        - libgl                             # [linux]
        - libglu                            # [linux]
    files:
      include:
        - bin/wb_command
        - bin/wb_shortcuts
        - share/bash-completion/completions/*
    test:
      commands:
        - wb_command -version
        - wb_shortcuts -help
  - name: {{ name }}
    requirements:
      run:
        - {{ pin_subpackage('connectome-workbench-cli', exact=True) }}
        - {{ pin_subpackage('connectome-workbench-gui', exact=True) }}
    test:
      commands:
        - wb_view -help
        - wb_command -version
        - wb_shortcuts -help

about:
  home: https://www.humanconnectome.org/software/connectome-workbench
  summary: 'Neuroimaging utility for the Human Connectome Project'
  description: |
    Connectome Workbench is an open source, freely available visualization and discovery
    tool used to map neuroimaging data, especially data generated by the Human
    Connectome Project.
  license: GPL-2.0-only
  # Please also note that some projects have multiple license files which all need to be added using a valid yaml list.
  # See https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#license-file
  license_file:
    - LICENSE
    - src/CZIlib/LICENSE
    - src/QxtCore/LICENSE_qxt
    - src/kloewe/cpuinfo/LICENSE
    - src/kloewe/dot/LICENSE
  # The doc_url and dev_url are optional.
  doc_url: https://humanconnectome.org/software/workbench-command
  dev_url: https://github.com/Washington-University/workbench

extra:
  recipe-maintainers:
    - effigies
